HTTP 1.1 vs HTTP 2

Introduction: 

    HTTP 1.1 got released in 1997 while HTTP 2 in 2015. HTTP 2 has improved version of data transfer, compression and speed.
		HTTP2 is binary, instead of textual and is fully multiplexed, instead of ordered and blocking unlike HTTP 1.1. HTTP2 allows servers to “push” responses proactively into client caches
		HTTP1.1 is the current predecessor and has been around for about 20 years. The problem with HTTP1.1 is that can only load requests one at a time, one request per one TCP connection. Basically, this made browsers run parallel requests to multiple TCPs for the same Web asset. This clogs up “the wire” with multiple duplicate data requests, and can hurt performance if too many requests are made.
		
		
Key Features:	
		
		* HTTP 1.1 supports connection reuse i.e. for every TCP connection there could be multiple requests and responses, and pipelining where the client can request several resources from the server at once. However, pipelining was hard to implement due to issues such as head-of-line blocking and was not a feasible solution.
		* HTTP 2 uses multiplexing, where over a single TCP connection resources to be delivered are interleaved and arrive at the client almost at the same time. It is done using streams which can be prioritized, can have dependencies and individual flow control. It also provides a feature called server push that allows the server to send data that the client will need but has not yet requested.
		
Web Traffic:
		* HTTP/1.1 provides faster delivery of web pages and reduces web traffic as compared to HTTP/1.0. However, TCP starts slowly and with domain sharding (resources can be downloaded simultaneously by using multiple domains), connection reuse and pipelining, there is an increased risk of network congestion.	
    * HTTP/2 utilizes multiplexing and server push to effectively reduce the page load time by a greater margin along with being less sensitive to network delays.

Header Compression:

     In HTTP 1.1, headers are sent on every request leading to a lot of duplicate data being sent uncompressed across the wire. Header compression is included by default in HTTP/2 using HPACK.

Performance Optimization:
     * For HTTP 1.1, spriting, concatenating, inlining, domain sharding are some of the optimizations used as a workaround to the ‘six connections per host’ rule. While HTTP 2, removes the need for unnecessary optimization hacks.
	
Conclusion:

		The basic difference is Delivery Model. HTTP 2.0 is a binary protocol that multiplexes numerous streams going over a single TCP connection. The contents of each stream are HTTP 1.1 requests and responses, just encoded and packed up differently. HTTP2 adds a number of features to manage the streams, but leaves old semantics untouched.
		This results in reduced latency and accelerates content download on modern web pages.
		HTTP 1.1 is minimal in usage across web in 2020, especially with HTTP 3.0 in draft. 